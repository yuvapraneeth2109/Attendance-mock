{"ast":null,"code":"const BASE_URL = \"http://localhost:3000\";\nexport async function startSession(subject) {\n  const res = await fetch(`${BASE_URL}/session/start`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      subject\n    })\n  });\n  if (!res.ok) throw new Error(\"could not start session\");\n  return res.json();\n}\nexport async function getSessionDetails(id) {\n  const res = await fetch(`${BASE_URL}/session/${id}`);\n  if (!res.ok) throw new Error(\"session not found\");\n  return res.json();\n}\nexport async function checkIn(id, rollNo) {\n  const res = await fetch(`${BASE_URL}/session/${id}/checkin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      roll_no: rollNo\n    })\n  });\n  if (!res.ok) throw new Error(\"check-in failed\");\n  return res.json();\n}\nexport async function endSession(id) {\n  const res = await fetch(`${BASE_URL}/session/${id}/end`, {\n    method: \"POST\"\n  });\n  if (!res.ok) throw new Error(\"could not end session\");\n  return res.json();\n}","map":{"version":3,"names":["BASE_URL","startSession","subject","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","getSessionDetails","id","checkIn","rollNo","roll_no","endSession"],"sources":["/Users/harshameghanamacha/Library/CloudStorage/OneDrive-Personal/Desktop/SIGMA-DEVELOPMENT/PROJECT_p/frontend/src/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:3000\";\n\nexport async function startSession(subject) {\n  const res = await fetch(`${BASE_URL}/session/start`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ subject }),\n  });\n  if (!res.ok) throw new Error(\"could not start session\");\n  return res.json();\n}\n\nexport async function getSessionDetails(id) {\n  const res = await fetch(`${BASE_URL}/session/${id}`);\n  if (!res.ok) throw new Error(\"session not found\");\n  return res.json();\n}\n\nexport async function checkIn(id, rollNo) {\n  const res = await fetch(`${BASE_URL}/session/${id}/checkin`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ roll_no: rollNo }),\n  });\n  if (!res.ok) throw new Error(\"check-in failed\");\n  return res.json();\n}\n\nexport async function endSession(id) {\n  const res = await fetch(`${BASE_URL}/session/${id}/end`, { method: \"POST\" });\n  if (!res.ok) throw new Error(\"could not end session\");\n  return res.json();\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,eAAeC,YAAYA,CAACC,OAAO,EAAE;EAC1C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,gBAAgB,EAAE;IACnDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAQ,CAAC;EAClC,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EACvD,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,iBAAiBA,CAACC,EAAE,EAAE;EAC1C,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,YAAYc,EAAE,EAAE,CAAC;EACpD,IAAI,CAACX,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACjD,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeG,OAAOA,CAACD,EAAE,EAAEE,MAAM,EAAE;EACxC,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,YAAYc,EAAE,UAAU,EAAE;IAC3DT,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEQ,OAAO,EAAED;IAAO,CAAC;EAC1C,CAAC,CAAC;EACF,IAAI,CAACb,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EAC/C,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeM,UAAUA,CAACJ,EAAE,EAAE;EACnC,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,YAAYc,EAAE,MAAM,EAAE;IAAET,MAAM,EAAE;EAAO,CAAC,CAAC;EAC5E,IAAI,CAACF,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}